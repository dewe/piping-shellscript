#!/bin/sh
set -eu

usage() {
    cat >&2 << 'EOF'
Usage: transpose

Transpose lines of text from stdin to stdout.
Converts rows to columns - characters at the same position
in each line become a new line.

Examples:
  echo "hello" | transpose
  transpose < input.txt
  cat file1 file2 | transpose
EOF
}

main() {
    if [ $# -gt 0 ]; then
        case "$1" in
            -h|--help)
                usage
                exit 0
                ;;
        esac
    fi

    if [ -t 0 ]; then
        usage
        exit 1
    fi

    if ! IFS= read -r first_line; then
        exit 0
    fi

    { printf '%s\n' "$first_line"; cat; } | awk '
    {
        line_num++
        line_length = length($0)
        
        if (line_length > max_len) {
            max_len = line_length
        }
        
        for (i = 1; i <= line_length; i++) {
            char = substr($0, i, 1)
            lines[i] = lines[i] char
        }
        
        if (line_length == 0) {
            for (i = 1; i <= max_len; i++) {
                lines[i] = lines[i] " "
            }
        } else {
            for (i = line_length + 1; i <= max_len; i++) {
                lines[i] = lines[i] " "
            }
        }
    }
    END {
        for (i = 1; i <= max_len; i++) {
            line = lines[i]
            sub(/ +$/, "", line)
            print line
        }
    }
    '
}

main "$@"

