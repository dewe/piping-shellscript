#!/bin/sh
set -eu

usage() {
    cat >&2 << 'EOF'
Usage: transpose

Transpose lines of text from stdin to stdout.
Converts rows to columns - characters at the same position
in each line become a new line.

Examples:
  echo "hello" | transpose
  transpose < input.txt
  cat file1 file2 | transpose
EOF
}

main() {
    if [ $# -gt 0 ]; then
        case "$1" in
            -h|--help)
                usage
                exit 0
                ;;
        esac
    fi

    if [ -t 0 ]; then
        usage
        exit 1
    fi

    if ! IFS= read -r first_line; then
        exit 0
    fi

    { printf '%s\n' "$first_line"; cat; } | awk '
    {
        line_num++
        input_lines[line_num] = $0
        line_length = length($0)
        line_lengths[line_num] = line_length
        
        if (line_length > max_len) {
            max_len = line_length
        }
    }
    END {
        for (i = 1; i <= max_len; i++) {
            line = ""
            for (j = 1; j <= line_num; j++) {
                input_line = input_lines[j]
                input_length = line_lengths[j]
                
                if (i <= input_length) {
                    line = line substr(input_line, i, 1)
                } else {
                    # Add space for positions beyond line length
                    line = line " "
                }
            }
            # Trim only trailing spaces
            sub(/ +$/, "", line)
            print line
        }
    }
    '
}

main "$@"

